@model Services.Commands.Topic.UpdateReplyCommand
@{
    ViewData["Title"] = "Edit";
}
<h2>Update Reply</h2>
<hr />
@{
    var aggregateId = (Guid)ViewBag.AggregateId;
    var replyId = (Guid)ViewBag.ReplyId;

}
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateReply" >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AggregateId" value =@aggregateId/>
            <input type="hidden" asp-for="ReplyId" value=@replyId/>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <input asp-for="Content" class="form-control" />
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    
    <a asp-action="Details" asp-route-id="@aggregateId">Back to Topic</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
